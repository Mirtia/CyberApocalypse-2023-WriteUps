from web3 import Web3
from web3.auto.gethdev import w3
from eth_account import Account
import json
from dotenv import load_dotenv
import os

load_dotenv()

rpc_url = os.getenv("RPC_URL")
private_key = os.getenv("PRIVATE_KEY")

web3 = Web3(Web3.HTTPProvider(rpc_url))
account = Account.from_key(private_key)

setup_abi = json.loads('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"TARGET","outputs":[{"internalType":"contract Unknown","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isSolved","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')
bytecode = "0x60a060405234801561001057600080fd5b5060405161001d9061004b565b604051809103906000f080158015610039573d6000803e3d6000fd5b506001600160a01b0316608052610057565b60ed806101f683390190565b60805161017f61007760003960008181605d0152609b015261017f6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806364d98f6e1461003b578063cc1f2afa14610058575b600080fd5b610043610097565b60405190151581526020015b60405180910390f35b61007f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161004f565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637b2aab036040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011b9190610120565b905090565b60006020828403121561013257600080fd5b8151801515811461014257600080fd5b939250505056fea26469706673582212201325643dedabbe2434ab90caf9926d7bf5f69a22baf3773e224b4df95d098f6364736f6c63430008130033608060405234801561001057600080fd5b5060ce8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80637b2aab03146037578063ca4f14c4146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b606660623660046080565b6068565b005b80600a03607d576000805460ff191660011790555b50565b600060208284031215609157600080fd5b503591905056fea2646970667358221220b642b19494863c522cb4fa2d21495951c017fce82dd3b6b3d0b48a113729817e64736f6c63430008130033"
target_contract = web3.eth.contract(
    abi=setup_abi, bytecode=bytecode, address=os.getenv("ADDRESS"))
tx_hash = target_contract.constructor().transact({'from': account.address})
tx_receipt = web3.eth.wait_for_transaction_receipt(tx_hash)
object_address = target_contract.functions.TARGET().call(
    {'from': account.address})

target_abi = json.loads('[{"inputs":[{"internalType":"uint256","name":"version","type":"uint256"}],"name":"updateSensors","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')
bytecode = "0x608060405234801561001057600080fd5b5060ce8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80637b2aab03146037578063ca4f14c4146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b606660623660046080565b6068565b005b80600a03607d576000805460ff191660011790555b50565b600060208284031215609157600080fd5b503591905056fea2646970667358221220b642b19494863c522cb4fa2d21495951c017fce82dd3b6b3d0b48a113729817e64736f6c63430008130033"
target_contract = web3.eth.contract(
    abi=target_abi, bytecode=bytecode, address=object_address)
tx_hash = target_contract.functions.updateSensors(
    10).transact({'from': account.address})
tx_receipt = web3.eth.wait_for_transaction_receipt(tx_hash)

print(target_contract.functions.isSolved().call({'from': account.address}))
